@page "/tramite/{Id:int?}"
@namespace SGE.UI.Pages
@rendermode InteractiveServer
@inject NavigationManager Navegador
@using Microsoft.AspNetCore.Components.Web
@inject CasoDeUsoTramiteAlta CasoDeUsoTramiteAlta
@inject CasoDeUsoTramiteModificacion CasoDeUsoTramiteModificacion
@inject CasoDeUsoExpedienteConsultaPorId CasoDeUsoExpedienteConsultaPorId
@inject CasoDeUsoObtenerUsuario CasoDeUsoObtenerUsuario

<PageTitle>AgregarTramite</PageTitle>

<h1>Tr√°mites</h1>

@if (_esNuevoTramite)
{
    <h3>Agregando un nuevo Tramite</h3>
}
else
{
    <h3>Modificando el Tramite con ID"@_tramite.Id"</h3>
}
<div class="container">
    <button @onclick="VolverHome" class="btn btn-primary">Home</button>
</div>


@code {
    Tramite _tramite = new Tramite();
    bool esCorrecto = true;
    [Parameter] public int? Id { get; set; }
    bool _esNuevoTramite = true;
    protected override void OnInitialized()
    {
        if (Id != null) //si existe el tramite
        {
            var exp = CasoDeUsoExpedienteConsultaPorId.Ejecutar(Id.Value); //me quedo con el expediente
            var tram = exp.tramites; //me quedo con la lista de tramites de ese expediente
            if (tram != null)
            {
                _tramite = tram;
                _esNuevoTramite = false;
            }
        }
    }

    void Aceptar()
    {
        if (CasoDeUsoExpedienteConsultaPorId.Ejecutar(_tramite.ExpedienteId) != null)
        {
            if (_esNuevoTramite)
            {
                CasoDeUsoTramiteModificacion.Ejecutar(_tramite, Id.Value);
            }
            else
            {
                CasoDeUsoTramiteModificacion.Ejecutar(_tramite, Id.Value);
            }
            _tramite = new Tramite();
            Navegador.NavigateTo("listadoTramites");
        }
    }
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    void VolverHome()
    {
        NavigationManager.NavigateTo("/"); // Vuelve al Home
    }
}