@page "/listaexpedientes"
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject NavigationManager Navegador
@using Microsoft.AspNetCore.Components.Web
@using SGE.Aplicacion.Servicios
@inject CasoDeUsoExpedienteConsultaTodos CasoDeUsoExpedienteConsultaTodos
@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja

<PageTitle>ListarExpedientes</PageTitle>

<h1>Listado de Expedientes</h1>

<p>A continuación se visualiza el listado de expedientes.</p>

@if (_expedientes == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Carátula</th>
                <th>Fecha De Creación</th>
                <th>Última Modificación</th>
                <th>Id De Usuario Ult Mod</th>
                <th>Estado</th>
                <th>Trámites</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expediente in _expedientes)
            {
                <tr>
                    <td>@expediente.Id</td>
                    <td>@expediente.Caratula</td>
                    <td>@expediente.FechaCreacion</td>
                    <td>@expediente.UltimaModificacion</td>
                    <td>@expediente.IdUsuarioUltimaModificacion</td>
                    <td>@expediente.Estado</td>
                    <td>@expediente.Tramites</td>
                </tr>
                <td>
                    <button class="btn btn-primary" @onclick="()=>ModificarExpediente(expediente)">
            <span class="oi oi-pencil"></span>
            </button>
        </td>
        <td>
                    <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(expediente)">
            <span class="oi oi-trash"></span>
            </button>
        </td>
            }
        </tbody>
    </table>
}
<div class="container">
    <button @onclick="VolverHome" class="btn btn-primary">Home</button>
</div>

<DialogoConfirmacion @ref="dialogo" />

@code {
    List<Expediente> _expedientes = new List<Expediente>();

            protected override void OnInitialized()
            {
            _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar();
            }

    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    void VolverHome()
    {
        NavigationManager.NavigateTo("/"); // Vuelve al Home
    }
    DialogoConfirmacion dialogo = null!;
    Expediente? _expedienteEliminar = null;
    private void ConfirmarEliminacion(Expediente expediente)
    {
        _expedienteEliminar = expediente;
        dialogo.Mensaje = $"¿Desea eliminar el expediente {expediente.Id}?";
        dialogo.Mostrar();
    }
    private void Eliminar()
    {
        if (_expedienteEliminar != null)
        {
            CasoDeUsoExpedienteBaja.Ejecutar(_expedienteEliminar.Id, _expedienteEliminar.IdUsuarioUltimaModificacion);
            _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar(); //se actualiza la lista
        }
    }
    void ModificarExpediente(Expediente expediente)
    {
        Navegador.NavigateTo($"expedientes/editar/{expediente.Id}");
    }

        }

